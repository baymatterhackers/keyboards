/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER  1
#define RAISE  2

// Log to USB (not working yet)
// CONFIG_ZMK_USB_LOGGING=y
/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

/ {
    combos {
        compatible = "zmk,combos";

        Exclaimation {
            bindings = <&kp EXCLAMATION>;
            key-positions = <13 1>;
            layers = <0>;
        };

        at {
            bindings = <&kp AT_SIGN>;
            key-positions = <2 14>;
            layers = <0>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <3 15>;
            layers = <0>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
            layers = <0>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
            layers = <0>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <6 18>;
            layers = <0>;
        };

        ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <7 19>;
            layers = <0>;
        };

        asterix {
            bindings = <&kp ASTERISK>;
            key-positions = <8 20>;
            layers = <0>;
        };

        leftparens {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <9 21>;
            layers = <0>;
        };

        rightparens {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <10 22>;
            layers = <0>;
        };

        backspace-word {
            bindings = <&kp LA(BACKSPACE)>;
            key-positions = <11 10>;
            layers = <0>;
        };

        backspace-line {
            bindings = <&kp LG(BACKSPACE)>;
            key-positions = <9 10 11>;
            layers = <0>;
        };

        super-up-r {
            bindings = <&kp PAGE_UP>;
            key-positions = <8 20>;
            layers = <1>;
        };

        super-down-r {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <32 46>;
            layers = <1>;
        };

        super-left-r {
            bindings = <&kp RA(LEFT_ARROW)>;
            key-positions = <30 31>;
            layers = <1>;
        };

        super-right-r {
            bindings = <&kp RA(RIGHT_ARROW)>;
            key-positions = <33 34>;
            layers = <1>;
        };

        super-up-l {
            bindings = <&kp PAGE_UP>;
            key-positions = <3 15>;
            layers = <1>;
        };

        super-down-l {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <27 39>;
            layers = <1>;
        };

        super-left-l {
            bindings = <&kp RA(LEFT_ARROW)>;
            key-positions = <25 26>;
            layers = <1>;
        };

        super-right-l {
            bindings = <&kp RA(RIGHT_ARROW)>;
            key-positions = <28 29>;
            layers = <1>;
        };
    };

    behaviors {
        home_tap_hold: home_tap_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_TAP_HOLD";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-unless-interrupted";
        };
    };

    macros {
        up_left: up_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp UP_ARROW &kp LEFT_ARROW>;

            label = "UP_LEFT";
        };

        up_right: up_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp UP_ARROW &kp RIGHT_ARROW>;

            label = "UP_RIGHT";
        };

        down_left: down_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp DOWN_ARROW &kp LEFT_ARROW>;

            label = "DOWN_LEFT";
        };

        down_right: down_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp DOWN_ARROW &kp RIGHT_ARROW>;

            label = "DOWN_RIGHT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
&lt 2 ESCAPE    &kp N1        &kp N2     &kp N3        &kp N4        &kp N5                               &kp NUMBER_6  &kp N7         &kp N8            &kp N9             &kp N0         &kp BACKSPACE
&lt 2 TAB       &kp Q         &kp W      &kp E         &kp R         &kp T                                &kp Y         &kp U          &kp I             &kp O              &kp P          &kp RETURN
&lt 1 MINUS     &kp A         &kp S      &kp D         &kp F         &kp G                                &kp H         &kp J          &kp K             &kp L              &kp SEMICOLON  &lt 1 SINGLE_QUOTE
&kp LEFT_SHIFT  &kp Z         &kp X      &kp C         &kp V         &kp B      &trans       &trans       &kp N         &kp M          &kp COMMA         &kp PERIOD         &kp SLASH      &kp RIGHT_SHIFT
&mo 1           &kp CAPSLOCK  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI  &kp SPACE  &lt 3 SPACE  &lt 3 SPACE  &kp SPACE     &kp RIGHT_GUI  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH  &mo 1
            >;

            label = "qwerty";
        };

        raise {
            bindings = <
&kp GRAVE  &none   &none           &none           &none            &none                   &none   &none           &none           &none            &none   &kp DEL
&trans     &none   &up_left        &kp UP_ARROW    &up_right        &none                   &none   &up_left        &kp UP_ARROW    &up_right        &none   &trans
&kp EQUAL  &none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none                   &none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none   &trans
&trans     &none   &down_left      &none           &down_right      &none   &mo 4   &mo 4   &none   &down_left      &none           &down_right      &none   &trans
&trans     &trans  &trans          &trans          &trans           &trans  &trans  &trans  &trans  &trans          &trans          &trans           &trans  &trans
            >;

            label = "raise";
        };

        controls {
            bindings = <
&trans  &kp F14     &kp F15            &kp C_AL_SCREENSAVER  &kp K_POWER  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP       &kp F20      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &kp C_PREV         &kp C_PP              &kp C_NEXT   &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans             &trans                &trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans             &trans                &trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "controls";
        };

        mirror {
            bindings = <
&kp BSPC    &kp N0         &kp N9             &kp N8            &kp N7  &kp NUMBER_6                  &kp N5  &kp N4  &kp N3  &kp N2  &kp N1  &kp ESC
&kp RETURN  &kp P          &kp O              &kp I             &kp U   &kp Y                         &kp T   &kp R   &kp E   &kp W   &kp Q   &kp TAB
&kp SQT     &kp SEMICOLON  &kp L              &kp K             &kp J   &kp H                         &kp G   &kp F   &kp D   &kp S   &kp A   &kp MINUS
&trans      &kp SLASH      &kp PERIOD         &kp COMMA         &kp M   &kp N         &trans  &trans  &kp B   &kp V   &kp C   &kp X   &kp Z   &trans
&trans      &kp BACKSLASH  &kp RIGHT_BRACKET  &kp LEFT_BRACKET  &trans  &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "mirror";
        };

        keyboard {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                        &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                        &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "keyboard";
        };
    };
};
